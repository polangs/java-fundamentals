/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.HashSet;
import java.util.Random;
//i got multiple helps from michelle, jon, quang, jeff to figure out how to generate numbers, rolling dice and intelliJ prob

public class Library {
    //main method -
    public static int[] roll (int n){
        int diceOne = 1;
        int diceTwo = 6;
        Random rand = new Random();
        int[]newArray = new int[n];


        for(int i = 0; i < n; i++){
            //generate int 1 and 6 and put it in the array
            int randNum = rand.nextInt((diceTwo - diceOne) + 1) + diceOne;
            //put it into the array
            newArray[i] = randNum;
            //repeat
        }
        return newArray;
    }
    // i got quangs help here to run my test
    public static boolean containsDuplicates (int[] arr){
     for (int i = 0; i < arr.length-1; i++){
        for (int j = 1; j < arr.length; j++) {
            if (arr[i] == arr[j]){
                return true;
            }
        }
     }
     return false;
    }

    public static int calculatingAverages(int[] arr) {
        int sum = 0 ;
        int average = 0;

        for (int value : arr) {
            sum += value;
            average = sum / arr.length;
        }
        return average;
    }

//    public static int arraysOfArrays (int[][]arr){
//        //given an array of arrays  calculate the average value for each array and return the array with the lowest average
//        int arrAverage
//        double lowestAverage = calculatingAverages(arr[0]);
//                for (int i =1; i>arr.length; i++);
//                lowestAverage =
//    }


    public static String analyzingWeatherData(int[][] array){
        //creating hashSet to keep track of all the temp seen
        HashSet<Integer> seenTemperatures = new HashSet<>();
        //comparing the min value to the max value and reassigning the min to max
        //stack overflow https://stackoverflow.com/questions/22768507/using-a-tally-array-to-keep-counts-of-another-array
        int minValue = Integer.MAX_VALUE;

        int maxValue = Integer.MIN_VALUE;
        //storing message as output
        String message = "";


        //use seattle weather data
        //iterate  through all data to find min and max values
        // use hashSet of Integer to keep track of all unique temperatures seen
        for (int[] week : array){
            for (int day : week){
                //iterate from the min and max temp
                if (day > maxValue) {
                    maxValue = day;
                }else if (day < minValue){
                    minValue = day;
                }
                //adding thing to the array for the  Hashset
                seenTemperatures.add(day);
            }
        }


        //got help from quang
        //create a String containing any temperature not seen during the month
        message += String.format(message += String.format("High: %d\n", maxValue));
        message += String.format("Low: %d\n", minValue);

        // Checks which temperatures are not in the range between max and min
        for (int i = minValue; i <= maxValue; i++) {
            if (!seenTemperatures.contains(i)) {
                message += String.format("Never saw temperature: %d\n", i);
            }
        }
        //return that String
        return message;
    }

//    public static String tally (List<String> votes){
//        //function called tally
//        int numberOfVotes = 0;
//
//        //accepts a list of strings representing votes
//        HashMap<String, Integer> tallyVoteCount = new HashMap<>();
//        for (String character : tallyVoteCount) {
//            characterCounts.put(character, 1);
//        //returns one string to show what got most votes


    }

